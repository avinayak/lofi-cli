"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateColor = exports.updateControls = exports.createControls = void 0;

var _blessed = _interopRequireDefault(require("blessed"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var createControls = function createControls() {
  return {
    currentSong: undefined,
    volume: 1,
    box: _blessed["default"].box({
      width: '100%',
      height: '100%',
      tags: true,
      style: {
        fg: 'white',
        bg: '#ad006e'
      },
      content: createText()
    })
  };
};

exports.createControls = createControls;

var createText = function createText(currentSong) {
  var volume = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  return '\n\n'.concat("{bold}Volume{/bold} [{#11A5AD-fg}{bold}".concat(getVolumeBars(volume), "{/}]")).concat("\n{bold}Current Song{/bold}: ".concat(currentSong || 'Press CTRL + A'));
};

var getVolumeBars = function getVolumeBars(volume) {
  return Array.from(Array(Math.floor(volume * 10))).reduce(function (acc, curr) {
    return acc.concat('==');
  }, '').concat(Array.from(Array(10 - Math.floor(volume * 10))).reduce(function (acc, curr) {
    return acc.concat('  ');
  }, ''));
};

var updateControls = function updateControls(controls) {
  return controls.box.content = createText(controls.currentSong, controls.volume);
};

exports.updateControls = updateControls;

var updateColor = function updateColor(controls, screen) {
  return function (color) {
    controls.box.style.bg = color;
    screen.render();
  };
};

exports.updateColor = updateColor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jbGkvY29udHJvbHMuanMiXSwibmFtZXMiOlsiY3JlYXRlQ29udHJvbHMiLCJjdXJyZW50U29uZyIsInVuZGVmaW5lZCIsInZvbHVtZSIsImJveCIsImJsZXNzZWQiLCJ3aWR0aCIsImhlaWdodCIsInRhZ3MiLCJzdHlsZSIsImZnIiwiYmciLCJjb250ZW50IiwiY3JlYXRlVGV4dCIsImNvbmNhdCIsImdldFZvbHVtZUJhcnMiLCJBcnJheSIsImZyb20iLCJNYXRoIiwiZmxvb3IiLCJyZWR1Y2UiLCJhY2MiLCJjdXJyIiwidXBkYXRlQ29udHJvbHMiLCJjb250cm9scyIsInVwZGF0ZUNvbG9yIiwic2NyZWVuIiwiY29sb3IiLCJyZW5kZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVPLElBQU1BLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUI7QUFBQSxTQUFPO0FBQ2pDQyxJQUFBQSxXQUFXLEVBQUVDLFNBRG9CO0FBRWpDQyxJQUFBQSxNQUFNLEVBQUUsQ0FGeUI7QUFHakNDLElBQUFBLEdBQUcsRUFBRUMsb0JBQVFELEdBQVIsQ0FBWTtBQUNiRSxNQUFBQSxLQUFLLEVBQUUsTUFETTtBQUViQyxNQUFBQSxNQUFNLEVBQUUsTUFGSztBQUdiQyxNQUFBQSxJQUFJLEVBQUUsSUFITztBQUliQyxNQUFBQSxLQUFLLEVBQUU7QUFDSEMsUUFBQUEsRUFBRSxFQUFFLE9BREQ7QUFFSEMsUUFBQUEsRUFBRSxFQUFFO0FBRkQsT0FKTTtBQVFiQyxNQUFBQSxPQUFPLEVBQUVDLFVBQVU7QUFSTixLQUFaO0FBSDRCLEdBQVA7QUFBQSxDQUF2Qjs7OztBQWVQLElBQU1BLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQUNaLFdBQUQ7QUFBQSxNQUFjRSxNQUFkLHVFQUF1QixDQUF2QjtBQUFBLFNBQTZCLE9BQzNDVyxNQUQyQyxrREFDTUMsYUFBYSxDQUFDWixNQUFELENBRG5CLFdBRTNDVyxNQUYyQyx3Q0FFSmIsV0FBVyxJQUFJLGdCQUZYLEVBQTdCO0FBQUEsQ0FBbkI7O0FBSUEsSUFBTWMsYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixDQUFBWixNQUFNO0FBQUEsU0FBSWEsS0FBSyxDQUFDQyxJQUFOLENBQzVCRCxLQUFLLENBQUNFLElBQUksQ0FBQ0MsS0FBTCxDQUFXaEIsTUFBTSxHQUFHLEVBQXBCLENBQUQsQ0FEdUIsRUFFM0JpQixNQUYyQixDQUVwQixVQUFDQyxHQUFELEVBQU1DLElBQU47QUFBQSxXQUFlRCxHQUFHLENBQUNQLE1BQUosQ0FBVyxJQUFYLENBQWY7QUFBQSxHQUZvQixFQUVhLEVBRmIsRUFHM0JBLE1BSDJCLENBSXhCRSxLQUFLLENBQUNDLElBQU4sQ0FBV0QsS0FBSyxDQUFDLEtBQUtFLElBQUksQ0FBQ0MsS0FBTCxDQUFXaEIsTUFBTSxHQUFHLEVBQXBCLENBQU4sQ0FBaEIsRUFBZ0RpQixNQUFoRCxDQUF1RCxVQUFDQyxHQUFELEVBQU1DLElBQU47QUFBQSxXQUFlRCxHQUFHLENBQUNQLE1BQUosQ0FBVyxJQUFYLENBQWY7QUFBQSxHQUF2RCxFQUF3RixFQUF4RixDQUp3QixDQUFKO0FBQUEsQ0FBNUI7O0FBT08sSUFBTVMsY0FBYyxHQUFHLFNBQWpCQSxjQUFpQixDQUFBQyxRQUFRO0FBQUEsU0FBS0EsUUFBUSxDQUFDcEIsR0FBVCxDQUFhUSxPQUFiLEdBQXVCQyxVQUFVLENBQUNXLFFBQVEsQ0FBQ3ZCLFdBQVYsRUFBdUJ1QixRQUFRLENBQUNyQixNQUFoQyxDQUF0QztBQUFBLENBQS9COzs7O0FBRUEsSUFBTXNCLFdBQVcsR0FBRyxTQUFkQSxXQUFjLENBQUNELFFBQUQsRUFBV0UsTUFBWDtBQUFBLFNBQXNCLFVBQUFDLEtBQUssRUFBSTtBQUN0REgsSUFBQUEsUUFBUSxDQUFDcEIsR0FBVCxDQUFhSyxLQUFiLENBQW1CRSxFQUFuQixHQUF3QmdCLEtBQXhCO0FBQ0FELElBQUFBLE1BQU0sQ0FBQ0UsTUFBUDtBQUNILEdBSDBCO0FBQUEsQ0FBcEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmxlc3NlZCBmcm9tICdibGVzc2VkJ1xuXG5leHBvcnQgY29uc3QgY3JlYXRlQ29udHJvbHMgPSAoKSA9PiAoe1xuICAgIGN1cnJlbnRTb25nOiB1bmRlZmluZWQsXG4gICAgdm9sdW1lOiAxLFxuICAgIGJveDogYmxlc3NlZC5ib3goe1xuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgICAgdGFnczogdHJ1ZSxcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgIGZnOiAnd2hpdGUnLFxuICAgICAgICAgICAgYmc6ICcjYWQwMDZlJ1xuICAgICAgICB9LFxuICAgICAgICBjb250ZW50OiBjcmVhdGVUZXh0KClcbiAgICB9KVxufSlcblxuY29uc3QgY3JlYXRlVGV4dCA9IChjdXJyZW50U29uZywgdm9sdW1lID0gMSkgPT4gJ1xcblxcbidcbiAgICAuY29uY2F0KGB7Ym9sZH1Wb2x1bWV7L2JvbGR9IFt7IzExQTVBRC1mZ317Ym9sZH0ke2dldFZvbHVtZUJhcnModm9sdW1lKX17L31dYClcbiAgICAuY29uY2F0KGBcXG57Ym9sZH1DdXJyZW50IFNvbmd7L2JvbGR9OiAke2N1cnJlbnRTb25nIHx8ICdQcmVzcyBDVFJMICsgQSd9YClcblxuY29uc3QgZ2V0Vm9sdW1lQmFycyA9IHZvbHVtZSA9PiBBcnJheS5mcm9tKFxuICAgIEFycmF5KE1hdGguZmxvb3Iodm9sdW1lICogMTApKSlcbiAgICAucmVkdWNlKChhY2MsIGN1cnIpID0+IGFjYy5jb25jYXQoJz09JyksICcnKVxuICAgIC5jb25jYXQoXG4gICAgICAgIEFycmF5LmZyb20oQXJyYXkoMTAgLSBNYXRoLmZsb29yKHZvbHVtZSAqIDEwKSkpLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiBhY2MuY29uY2F0KCcgICcpLCAnJylcbiAgICApXG5cbmV4cG9ydCBjb25zdCB1cGRhdGVDb250cm9scyA9IGNvbnRyb2xzID0+IChjb250cm9scy5ib3guY29udGVudCA9IGNyZWF0ZVRleHQoY29udHJvbHMuY3VycmVudFNvbmcsIGNvbnRyb2xzLnZvbHVtZSkpXG5cbmV4cG9ydCBjb25zdCB1cGRhdGVDb2xvciA9IChjb250cm9scywgc2NyZWVuKSA9PiBjb2xvciA9PiB7XG4gICAgY29udHJvbHMuYm94LnN0eWxlLmJnID0gY29sb3JcbiAgICBzY3JlZW4ucmVuZGVyKClcbn1cbiJdfQ==