"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _terminalKit = require("terminal-kit");

var keys = {
  VOLUME_DOWN: 'LEFT',
  VOLUME_UP: 'RIGHT',
  GET_CURRENT_SONG: 'CTRL_A',
  EXIT: 'CTRL_C'
};

var init = function init(lofiStream) {
  _terminalKit.terminal.green.bold('Playing ChilledCow stream...\n');

  _terminalKit.terminal.grabInput();

  var progressBar = _terminalKit.terminal.progressBar({
    width: 80,
    title: 'Volume',
    eta: false,
    percent: true,
    barHeadChar: '=',
    syncMode: true
  });

  var cli = {
    terminal: _terminalKit.terminal,
    progressBar: progressBar
  };
  progressBar.update(lofiStream.volume.volume);

  _terminalKit.terminal.on('key', function (name) {
    return menuOnClick(cli, lofiStream)(name);
  });

  return cli;
};

var menuOnClick = function menuOnClick(cli, lofiStream) {
  return function (keyName) {
    var offset = 0.1;

    switch (keyName) {
      case keys.VOLUME_DOWN:
        if (lofiStream.volume.volume - offset >= 0) lofiStream.volume.setVolume(lofiStream.volume.volume - 0.1);
        break;

      case keys.VOLUME_UP:
        if (lofiStream.volume.volume + offset <= 1) lofiStream.volume.setVolume(lofiStream.volume.volume + 0.1);
        break;

      case keys.GET_CURRENT_SONG:
        break;

      case keys.EXIT:
        process.exit(1);
    }

    cli.progressBar.update(lofiStream.volume.volume);
  };
};

var _default = init;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGkuanMiXSwibmFtZXMiOlsia2V5cyIsIlZPTFVNRV9ET1dOIiwiVk9MVU1FX1VQIiwiR0VUX0NVUlJFTlRfU09ORyIsIkVYSVQiLCJpbml0IiwibG9maVN0cmVhbSIsInRlcm1pbmFsIiwiZ3JlZW4iLCJib2xkIiwiZ3JhYklucHV0IiwicHJvZ3Jlc3NCYXIiLCJ3aWR0aCIsInRpdGxlIiwiZXRhIiwicGVyY2VudCIsImJhckhlYWRDaGFyIiwic3luY01vZGUiLCJjbGkiLCJ1cGRhdGUiLCJ2b2x1bWUiLCJvbiIsIm5hbWUiLCJtZW51T25DbGljayIsImtleU5hbWUiLCJvZmZzZXQiLCJzZXRWb2x1bWUiLCJwcm9jZXNzIiwiZXhpdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLElBQUksR0FBRztBQUNUQyxFQUFBQSxXQUFXLEVBQUUsTUFESjtBQUVUQyxFQUFBQSxTQUFTLEVBQUUsT0FGRjtBQUdUQyxFQUFBQSxnQkFBZ0IsRUFBRSxRQUhUO0FBSVRDLEVBQUFBLElBQUksRUFBRTtBQUpHLENBQWI7O0FBT0EsSUFBTUMsSUFBSSxHQUFHLFNBQVBBLElBQU8sQ0FBQUMsVUFBVSxFQUFJO0FBQ3ZCQyx3QkFBU0MsS0FBVCxDQUFlQyxJQUFmLENBQW9CLGdDQUFwQjs7QUFDQUYsd0JBQVNHLFNBQVQ7O0FBQ0EsTUFBTUMsV0FBVyxHQUFHSixzQkFBU0ksV0FBVCxDQUFxQjtBQUNyQ0MsSUFBQUEsS0FBSyxFQUFFLEVBRDhCO0FBRXJDQyxJQUFBQSxLQUFLLEVBQUUsUUFGOEI7QUFHckNDLElBQUFBLEdBQUcsRUFBRSxLQUhnQztBQUlyQ0MsSUFBQUEsT0FBTyxFQUFFLElBSjRCO0FBS3JDQyxJQUFBQSxXQUFXLEVBQUUsR0FMd0I7QUFNckNDLElBQUFBLFFBQVEsRUFBRTtBQU4yQixHQUFyQixDQUFwQjs7QUFTQSxNQUFNQyxHQUFHLEdBQUc7QUFBRVgsSUFBQUEsUUFBUSxFQUFFQSxxQkFBWjtBQUFzQkksSUFBQUEsV0FBVyxFQUFFQTtBQUFuQyxHQUFaO0FBRUFBLEVBQUFBLFdBQVcsQ0FBQ1EsTUFBWixDQUFtQmIsVUFBVSxDQUFDYyxNQUFYLENBQWtCQSxNQUFyQzs7QUFDQWIsd0JBQVNjLEVBQVQsQ0FBWSxLQUFaLEVBQW1CLFVBQUFDLElBQUk7QUFBQSxXQUFJQyxXQUFXLENBQUNMLEdBQUQsRUFBTVosVUFBTixDQUFYLENBQTZCZ0IsSUFBN0IsQ0FBSjtBQUFBLEdBQXZCOztBQUVBLFNBQU9KLEdBQVA7QUFDSCxDQWxCRDs7QUFvQkEsSUFBTUssV0FBVyxHQUFHLFNBQWRBLFdBQWMsQ0FBQ0wsR0FBRCxFQUFNWixVQUFOO0FBQUEsU0FBcUIsVUFBQWtCLE9BQU8sRUFBSTtBQUNoRCxRQUFNQyxNQUFNLEdBQUcsR0FBZjs7QUFDQSxZQUFRRCxPQUFSO0FBQ0EsV0FBS3hCLElBQUksQ0FBQ0MsV0FBVjtBQUNJLFlBQUlLLFVBQVUsQ0FBQ2MsTUFBWCxDQUFrQkEsTUFBbEIsR0FBMkJLLE1BQTNCLElBQXFDLENBQXpDLEVBQTRDbkIsVUFBVSxDQUFDYyxNQUFYLENBQWtCTSxTQUFsQixDQUE0QnBCLFVBQVUsQ0FBQ2MsTUFBWCxDQUFrQkEsTUFBbEIsR0FBMkIsR0FBdkQ7QUFDNUM7O0FBQ0osV0FBS3BCLElBQUksQ0FBQ0UsU0FBVjtBQUNJLFlBQUlJLFVBQVUsQ0FBQ2MsTUFBWCxDQUFrQkEsTUFBbEIsR0FBMkJLLE1BQTNCLElBQXFDLENBQXpDLEVBQTRDbkIsVUFBVSxDQUFDYyxNQUFYLENBQWtCTSxTQUFsQixDQUE0QnBCLFVBQVUsQ0FBQ2MsTUFBWCxDQUFrQkEsTUFBbEIsR0FBMkIsR0FBdkQ7QUFDNUM7O0FBQ0osV0FBS3BCLElBQUksQ0FBQ0csZ0JBQVY7QUFDSTs7QUFDSixXQUFLSCxJQUFJLENBQUNJLElBQVY7QUFDSXVCLFFBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLENBQWI7QUFWSjs7QUFZQVYsSUFBQUEsR0FBRyxDQUFDUCxXQUFKLENBQWdCUSxNQUFoQixDQUF1QmIsVUFBVSxDQUFDYyxNQUFYLENBQWtCQSxNQUF6QztBQUNILEdBZm1CO0FBQUEsQ0FBcEI7O2VBaUJlZixJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdGVybWluYWwgfSBmcm9tICd0ZXJtaW5hbC1raXQnXG5cbmNvbnN0IGtleXMgPSB7XG4gICAgVk9MVU1FX0RPV046ICdMRUZUJyxcbiAgICBWT0xVTUVfVVA6ICdSSUdIVCcsXG4gICAgR0VUX0NVUlJFTlRfU09ORzogJ0NUUkxfQScsXG4gICAgRVhJVDogJ0NUUkxfQydcbn1cblxuY29uc3QgaW5pdCA9IGxvZmlTdHJlYW0gPT4ge1xuICAgIHRlcm1pbmFsLmdyZWVuLmJvbGQoJ1BsYXlpbmcgQ2hpbGxlZENvdyBzdHJlYW0uLi5cXG4nKVxuICAgIHRlcm1pbmFsLmdyYWJJbnB1dCgpXG4gICAgY29uc3QgcHJvZ3Jlc3NCYXIgPSB0ZXJtaW5hbC5wcm9ncmVzc0Jhcih7XG4gICAgICAgIHdpZHRoOiA4MCxcbiAgICAgICAgdGl0bGU6ICdWb2x1bWUnLFxuICAgICAgICBldGE6IGZhbHNlLFxuICAgICAgICBwZXJjZW50OiB0cnVlLFxuICAgICAgICBiYXJIZWFkQ2hhcjogJz0nLFxuICAgICAgICBzeW5jTW9kZTogdHJ1ZVxuICAgIH0pXG5cbiAgICBjb25zdCBjbGkgPSB7IHRlcm1pbmFsOiB0ZXJtaW5hbCwgcHJvZ3Jlc3NCYXI6IHByb2dyZXNzQmFyIH1cblxuICAgIHByb2dyZXNzQmFyLnVwZGF0ZShsb2ZpU3RyZWFtLnZvbHVtZS52b2x1bWUpXG4gICAgdGVybWluYWwub24oJ2tleScsIG5hbWUgPT4gbWVudU9uQ2xpY2soY2xpLCBsb2ZpU3RyZWFtKShuYW1lKSlcblxuICAgIHJldHVybiBjbGlcbn1cblxuY29uc3QgbWVudU9uQ2xpY2sgPSAoY2xpLCBsb2ZpU3RyZWFtKSA9PiBrZXlOYW1lID0+IHtcbiAgICBjb25zdCBvZmZzZXQgPSAwLjFcbiAgICBzd2l0Y2ggKGtleU5hbWUpIHtcbiAgICBjYXNlIGtleXMuVk9MVU1FX0RPV046XG4gICAgICAgIGlmIChsb2ZpU3RyZWFtLnZvbHVtZS52b2x1bWUgLSBvZmZzZXQgPj0gMCkgbG9maVN0cmVhbS52b2x1bWUuc2V0Vm9sdW1lKGxvZmlTdHJlYW0udm9sdW1lLnZvbHVtZSAtIDAuMSlcbiAgICAgICAgYnJlYWtcbiAgICBjYXNlIGtleXMuVk9MVU1FX1VQOlxuICAgICAgICBpZiAobG9maVN0cmVhbS52b2x1bWUudm9sdW1lICsgb2Zmc2V0IDw9IDEpIGxvZmlTdHJlYW0udm9sdW1lLnNldFZvbHVtZShsb2ZpU3RyZWFtLnZvbHVtZS52b2x1bWUgKyAwLjEpXG4gICAgICAgIGJyZWFrXG4gICAgY2FzZSBrZXlzLkdFVF9DVVJSRU5UX1NPTkc6XG4gICAgICAgIGJyZWFrXG4gICAgY2FzZSBrZXlzLkVYSVQ6XG4gICAgICAgIHByb2Nlc3MuZXhpdCgxKVxuICAgIH1cbiAgICBjbGkucHJvZ3Jlc3NCYXIudXBkYXRlKGxvZmlTdHJlYW0udm9sdW1lLnZvbHVtZSlcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW5pdFxuIl19