#!/usr/bin/env node
"use strict";

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var CONFIG_PATH = _path["default"].join(__dirname, '/config.json');

var CORE_AUDIO_PATH = _path["default"].join(__dirname, '/../node_modules/speaker/deps/mpg123/src/output/coreaudio.c');

var setup = function setup() {
  var config = JSON.parse(_fs["default"].readFileSync(CONFIG_PATH));

  if (config.setup) {
    // The node-speaker package relies on the library mpg123 to play audio, which
    // unfortunately has an annoying warning that is displayed frequently.
    // It is likely due to network inconsistencies from streaming, resulting in no audio data being
    // sent to the speaker module resulting the "buffer underflow" warning.
    //
    // This warning seems like it should only appear to MacOS users because it occurs
    // in `coreaudio.c`, which handles audio output to MacOS machines in mpg123.
    //
    // The solution for now is to simply comment out the warning in `coreaudio.c`, and build
    // mpg123 again using node-gyp.
    _fs["default"].copyFileSync(_path["default"].join(__dirname, '/coreaudio.c'), CORE_AUDIO_PATH);

    config.setup = false;

    _fs["default"].writeFileSync(CONFIG_PATH, JSON.stringify(config));
  }
};

setup();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zZXR1cC5qcyJdLCJuYW1lcyI6WyJDT05GSUdfUEFUSCIsInBhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwiQ09SRV9BVURJT19QQVRIIiwic2V0dXAiLCJjb25maWciLCJKU09OIiwicGFyc2UiLCJmcyIsInJlYWRGaWxlU3luYyIsImNvcHlGaWxlU3luYyIsIndyaXRlRmlsZVN5bmMiLCJzdHJpbmdpZnkiXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFFQTs7QUFDQTs7OztBQUVBLElBQU1BLFdBQVcsR0FBR0MsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixjQUFyQixDQUFwQjs7QUFDQSxJQUFNQyxlQUFlLEdBQUdILGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsNkRBQXJCLENBQXhCOztBQUNBLElBQU1FLEtBQUssR0FBRyxTQUFSQSxLQUFRLEdBQU07QUFDaEIsTUFBTUMsTUFBTSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0MsZUFBR0MsWUFBSCxDQUFnQlYsV0FBaEIsQ0FBWCxDQUFmOztBQUNBLE1BQUlNLE1BQU0sQ0FBQ0QsS0FBWCxFQUFrQjtBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FJLG1CQUFHRSxZQUFILENBQWdCVixpQkFBS0MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLGNBQXJCLENBQWhCLEVBQXNEQyxlQUF0RDs7QUFDQUUsSUFBQUEsTUFBTSxDQUFDRCxLQUFQLEdBQWUsS0FBZjs7QUFDQUksbUJBQUdHLGFBQUgsQ0FBaUJaLFdBQWpCLEVBQThCTyxJQUFJLENBQUNNLFNBQUwsQ0FBZVAsTUFBZixDQUE5QjtBQUNIO0FBQ0osQ0FqQkQ7O0FBbUJBRCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2Jpbi9lbnYgbm9kZVxuXG5pbXBvcnQgZnMgZnJvbSAnZnMnXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuXG5jb25zdCBDT05GSUdfUEFUSCA9IHBhdGguam9pbihfX2Rpcm5hbWUsICcvY29uZmlnLmpzb24nKVxuY29uc3QgQ09SRV9BVURJT19QQVRIID0gcGF0aC5qb2luKF9fZGlybmFtZSwgJy8uLi9ub2RlX21vZHVsZXMvc3BlYWtlci9kZXBzL21wZzEyMy9zcmMvb3V0cHV0L2NvcmVhdWRpby5jJylcbmNvbnN0IHNldHVwID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbmZpZyA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKENPTkZJR19QQVRIKSlcbiAgICBpZiAoY29uZmlnLnNldHVwKSB7XG4gICAgICAgIC8vIFRoZSBub2RlLXNwZWFrZXIgcGFja2FnZSByZWxpZXMgb24gdGhlIGxpYnJhcnkgbXBnMTIzIHRvIHBsYXkgYXVkaW8sIHdoaWNoXG4gICAgICAgIC8vIHVuZm9ydHVuYXRlbHkgaGFzIGFuIGFubm95aW5nIHdhcm5pbmcgdGhhdCBpcyBkaXNwbGF5ZWQgZnJlcXVlbnRseS5cbiAgICAgICAgLy8gSXQgaXMgbGlrZWx5IGR1ZSB0byBuZXR3b3JrIGluY29uc2lzdGVuY2llcyBmcm9tIHN0cmVhbWluZywgcmVzdWx0aW5nIGluIG5vIGF1ZGlvIGRhdGEgYmVpbmdcbiAgICAgICAgLy8gc2VudCB0byB0aGUgc3BlYWtlciBtb2R1bGUgcmVzdWx0aW5nIHRoZSBcImJ1ZmZlciB1bmRlcmZsb3dcIiB3YXJuaW5nLlxuICAgICAgICAvL1xuICAgICAgICAvLyBUaGlzIHdhcm5pbmcgc2VlbXMgbGlrZSBpdCBzaG91bGQgb25seSBhcHBlYXIgdG8gTWFjT1MgdXNlcnMgYmVjYXVzZSBpdCBvY2N1cnNcbiAgICAgICAgLy8gaW4gYGNvcmVhdWRpby5jYCwgd2hpY2ggaGFuZGxlcyBhdWRpbyBvdXRwdXQgdG8gTWFjT1MgbWFjaGluZXMgaW4gbXBnMTIzLlxuICAgICAgICAvL1xuICAgICAgICAvLyBUaGUgc29sdXRpb24gZm9yIG5vdyBpcyB0byBzaW1wbHkgY29tbWVudCBvdXQgdGhlIHdhcm5pbmcgaW4gYGNvcmVhdWRpby5jYCwgYW5kIGJ1aWxkXG4gICAgICAgIC8vIG1wZzEyMyBhZ2FpbiB1c2luZyBub2RlLWd5cC5cbiAgICAgICAgZnMuY29weUZpbGVTeW5jKHBhdGguam9pbihfX2Rpcm5hbWUsICcvY29yZWF1ZGlvLmMnKSwgQ09SRV9BVURJT19QQVRIKVxuICAgICAgICBjb25maWcuc2V0dXAgPSBmYWxzZVxuICAgICAgICBmcy53cml0ZUZpbGVTeW5jKENPTkZJR19QQVRILCBKU09OLnN0cmluZ2lmeShjb25maWcpKVxuICAgIH1cbn1cblxuc2V0dXAoKVxuIl19